name: Publish all packages
on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'commit/tag/branch reference'
        required: true
        type: string
      csharp-package-version:
        description: 'version for the C# nuget package (MAJOR.MINOR.BUILD)'
        required: false
        type: string
      csharp-ref:
        description: 'optional commit/tag/branch reference for the C# project. Defaults to ref.'
        required: false
        type: string
      golang-package-version:
        description: 'version for the golang package (MAJOR.MINOR.BUILD) (no v prefix)'
        required: false
        type: string
      maven-package-version:
        description: 'version for the android package (MAJOR.MINOR.BUILD)'
        required: false
        type: string
      kotlin-mpp-package-version:
        description: 'version for the kotlin multiplatform package (MAJOR.MINOR.BUILD)'
        required: false
        type: string
      flutter-package-version:
        description: 'version for the flutter package (MAJOR.MINOR.BUILD) (no v prefix)'
        required: false
        type: string
      react-native-package-version:
        description: 'version for the react native package (MAJOR.MINOR.BUILD)'
        required: false
        type: string
      publish:
        description: 'boolean indicating whether packages should be published. true to publish. false to build only. Default = false.'
        required: false
        type: boolean
        default: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs: 
      # Careful, a boolean input is not a boolean output. A boolean input is
      # actually a boolean, but these outputs are strings. All the boolean
      # checks in this file have the format `boolean == 'true'`. So feel free
      # to set these variables here to `true` or `false` (e.g. windows: true)
      # if you want to test something.
      windows: ${{ !!inputs.csharp-package-version || !!inputs.golang-package-version }}
      darwin: ${{ !!inputs.csharp-package-version || !!inputs.golang-package-version }}
      linux: ${{ !!inputs.csharp-package-version || !!inputs.golang-package-version }}
      android: ${{ !!inputs.kotlin-mpp-package-version || !!inputs.maven-package-version || !!inputs.flutter-package-version || !!inputs.golang-package-version }}
      ios: ${{ !!inputs.kotlin-mpp-package-version || !!inputs.maven-package-version }}
      kotlin: ${{ !!inputs.kotlin-mpp-package-version || !!inputs.maven-package-version }}
      swift: false
      python: false
      csharp: ${{ !!inputs.csharp-package-version }}
      golang: ${{ !!inputs.golang-package-version }}
      maven: ${{ !!inputs.maven-package-version }}
      kotlin-mpp: ${{ !!inputs.kotlin-mpp-package-version }}
      flutter: ${{ !!inputs.flutter-package-version }}
      react-native: ${{ !!inputs.react-native-package-version }}
      ref: ${{ inputs.ref || github.sha }}
      csharp-package-version: ${{ inputs.csharp-package-version || '0.0.2' }}
      csharp-ref: ${{ inputs.csharp-ref || inputs.ref || github.sha }}
      golang-package-version: ${{ inputs.golang-package-version || '0.0.2' }}
      maven-package-version: ${{ inputs.maven-package-version || '0.0.2' }}
      kotlin-mpp-package-version: ${{ inputs.kotlin-mpp-package-version || '0.0.2' }}
      flutter-package-version: ${{ inputs.flutter-package-version || '0.0.2' }}
      react-native-package-version: ${{ inputs.react-native-package-version || '0.0.2' }}
      publish: ${{ inputs.publish }}
    steps:
      - run: echo "set output variables"

  build-windows:
    needs: setup
    if: ${{ needs.setup.outputs.windows == 'true' }}
    uses: ./.github/workflows/build-windows.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}
  build-darwin:
    needs: setup
    if: ${{ needs.setup.outputs.darwin == 'true' }}
    uses: ./.github/workflows/build-darwin.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}
  build-linux:
    needs: setup
    if: ${{ needs.setup.outputs.linux == 'true' }}
    uses: ./.github/workflows/build-linux.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}
  build-android:
    needs: setup
    if: ${{ needs.setup.outputs.android == 'true' }}
    uses: ./.github/workflows/build-android.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}
  build-ios:
    needs: setup
    if: ${{ needs.setup.outputs.ios == 'true' }}
    uses: ./.github/workflows/build-ios.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}

  build-language-bindings:
    needs: setup
    uses: ./.github/workflows/build-language-bindings.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}
      kotlin: ${{ needs.setup.outputs.kotlin == 'true'}}
      csharp: ${{ needs.setup.outputs.csharp == 'true'}}
      golang: ${{ needs.setup.outputs.golang == 'true'}}
      python: ${{ needs.setup.outputs.python == 'true'}}
      swift: ${{ needs.setup.outputs.swift == 'true'}}

  publish-csharp:
    needs: 
      - setup
      - build-windows
      - build-darwin
      - build-linux
      - build-language-bindings
    if: ${{ needs.setup.outputs.csharp == 'true' }}
    uses: ./.github/workflows/publish-csharp.yml
    with:
      ref: ${{ needs.setup.outputs.csharp-ref }}
      package-version: ${{ needs.setup.outputs.csharp-package-version }}
      publish: ${{ needs.setup.outputs.publish == 'true' }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  publish-golang:
    needs: 
      - setup
      - build-android
      - build-windows
      - build-darwin
      - build-linux
      - build-language-bindings
    if: ${{ needs.setup.outputs.golang == 'true' }}
    uses: ./.github/workflows/publish-golang.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}
      package-version: ${{ needs.setup.outputs.golang-package-version }}
      publish: ${{ needs.setup.outputs.publish == 'true' }}
    secrets:
      REPO_SSH_KEY: ${{ secrets.REPO_SSH_KEY }}
  
  publish-maven:
    needs: 
      - setup
      - build-android
      - build-language-bindings
    if: ${{ needs.setup.outputs.maven == 'true' }}
    uses: ./.github/workflows/publish-android.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}
      package-version: ${{ needs.setup.outputs.maven-package-version }}
      publish: ${{ needs.setup.outputs.publish == 'true' }}
    secrets:
      BREEZ_MVN_USERNAME: ${{ secrets.BREEZ_MVN_USERNAME }}
      BREEZ_MVN_PASSWORD: ${{ secrets.BREEZ_MVN_PASSWORD }}
  
  publish-kotlin-mpp:
    needs: 
      - setup
      - build-android
      - build-ios
      - build-language-bindings
    if: ${{ needs.setup.outputs.kotlin-mpp == 'true' }}
    uses: ./.github/workflows/publish-kotlin-mpp.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}
      package-version: ${{ needs.setup.outputs.kotlin-mpp-package-version }}
      publish: ${{ needs.setup.outputs.publish == 'true' }}
    secrets:
      BREEZ_MVN_USERNAME: ${{ secrets.BREEZ_MVN_USERNAME }}
      BREEZ_MVN_PASSWORD: ${{ secrets.BREEZ_MVN_PASSWORD }}
  
  publish-flutter:
    needs: 
      - setup
      - build-android      
    if: ${{ needs.setup.outputs.flutter == 'true' }}
    uses: ./.github/workflows/publish-flutter.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}
      package-version: ${{ needs.setup.outputs.flutter-package-version }}
      publish: ${{ needs.setup.outputs.publish == 'true' }}
    secrets:
      REPO_SSH_KEY: ${{ secrets.REPO_SSH_KEY }}

  # react native version x.y.z will at runtime require
  # ios and android packages x.y.z being published already.
  publish-react-native:
    needs:
      - setup
    if: ${{ needs.setup.outputs.react-native == 'true' }}
    uses: ./.github/workflows/publish-react-native.yml
    with:
      ref: ${{ needs.setup.outputs.ref }}
      package-version: ${{ needs.setup.outputs.react-native-package-version }}
      publish: ${{ needs.setup.outputs.publish == 'true' }}
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
